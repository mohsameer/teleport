// Teleport
// Copyright (C) 2024 Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: teleport/lib/proxy/peer/v0/proxyservice.proto

package peerv0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Frame wraps different message types to be sent over a stream.
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*Frame_DialRequest
	//	*Frame_ConnectionEstablished
	//	*Frame_Data
	Message isFrame_Message `protobuf_oneof:"Message"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP(), []int{0}
}

func (m *Frame) GetMessage() isFrame_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *Frame) GetDialRequest() *DialRequest {
	if x, ok := x.GetMessage().(*Frame_DialRequest); ok {
		return x.DialRequest
	}
	return nil
}

func (x *Frame) GetConnectionEstablished() *ConnectionEstablished {
	if x, ok := x.GetMessage().(*Frame_ConnectionEstablished); ok {
		return x.ConnectionEstablished
	}
	return nil
}

func (x *Frame) GetData() *Data {
	if x, ok := x.GetMessage().(*Frame_Data); ok {
		return x.Data
	}
	return nil
}

type isFrame_Message interface {
	isFrame_Message()
}

type Frame_DialRequest struct {
	DialRequest *DialRequest `protobuf:"bytes,1,opt,name=DialRequest,proto3,oneof"`
}

type Frame_ConnectionEstablished struct {
	ConnectionEstablished *ConnectionEstablished `protobuf:"bytes,2,opt,name=ConnectionEstablished,proto3,oneof"`
}

type Frame_Data struct {
	Data *Data `protobuf:"bytes,3,opt,name=Data,proto3,oneof"`
}

func (*Frame_DialRequest) isFrame_Message() {}

func (*Frame_ConnectionEstablished) isFrame_Message() {}

func (*Frame_Data) isFrame_Message() {}

// DialRequest contains details for connecting to a node.
type DialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NodeID is the {UUID}.{ClusterName} of the node to connect to.
	NodeID string `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	// TunnelType is the type of service being accessed. This differentiates agents that
	// create multiple reverse tunnels for different services.
	TunnelType string `protobuf:"bytes,2,opt,name=TunnelType,proto3" json:"TunnelType,omitempty"`
	// Source is the original source address of the client.
	Source *NetAddr `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`
	// Destination is the destination address to connect to over the reverse tunnel.
	Destination *NetAddr `protobuf:"bytes,4,opt,name=Destination,proto3" json:"Destination,omitempty"`
}

func (x *DialRequest) Reset() {
	*x = DialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialRequest) ProtoMessage() {}

func (x *DialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialRequest.ProtoReflect.Descriptor instead.
func (*DialRequest) Descriptor() ([]byte, []int) {
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP(), []int{1}
}

func (x *DialRequest) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *DialRequest) GetTunnelType() string {
	if x != nil {
		return x.TunnelType
	}
	return ""
}

func (x *DialRequest) GetSource() *NetAddr {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *DialRequest) GetDestination() *NetAddr {
	if x != nil {
		return x.Destination
	}
	return nil
}

// Addr is a network address.
type NetAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network is the type of network socket. For example tcp or udp.
	Network string `protobuf:"bytes,1,opt,name=Network,proto3" json:"Network,omitempty"`
	// Addr is the host:port address. For example 'localhost:22'
	Addr string `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`
}

func (x *NetAddr) Reset() {
	*x = NetAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetAddr) ProtoMessage() {}

func (x *NetAddr) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetAddr.ProtoReflect.Descriptor instead.
func (*NetAddr) Descriptor() ([]byte, []int) {
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP(), []int{2}
}

func (x *NetAddr) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetAddr) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// Data contains the raw bytes of a connection.
type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// ConnectionEstablished signals to the client a connection to the node has been established.
type ConnectionEstablished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectionEstablished) Reset() {
	*x = ConnectionEstablished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionEstablished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionEstablished) ProtoMessage() {}

func (x *ConnectionEstablished) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionEstablished.ProtoReflect.Descriptor instead.
func (*ConnectionEstablished) Descriptor() ([]byte, []int) {
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP(), []int{4}
}

var File_teleport_lib_proxy_peer_v0_proxyservice_proto protoreflect.FileDescriptor

var file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x2f, 0x76, 0x30, 0x2f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x48, 0x00, 0x52, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x0b, 0x44, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x07, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x22, 0x1c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x32, 0x3a,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x08, 0x44, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x52, 0x5a, 0x50, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x70, 0x65, 0x65, 0x72, 0x2f, 0x76, 0x30, 0x3b, 0x70, 0x65, 0x65, 0x72, 0x76, 0x30, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescOnce sync.Once
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescData = file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDesc
)

func file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescGZIP() []byte {
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescOnce.Do(func() {
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescData)
	})
	return file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDescData
}

var file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_teleport_lib_proxy_peer_v0_proxyservice_proto_goTypes = []any{
	(*Frame)(nil),                 // 0: proto.Frame
	(*DialRequest)(nil),           // 1: proto.DialRequest
	(*NetAddr)(nil),               // 2: proto.NetAddr
	(*Data)(nil),                  // 3: proto.Data
	(*ConnectionEstablished)(nil), // 4: proto.ConnectionEstablished
}
var file_teleport_lib_proxy_peer_v0_proxyservice_proto_depIdxs = []int32{
	1, // 0: proto.Frame.DialRequest:type_name -> proto.DialRequest
	4, // 1: proto.Frame.ConnectionEstablished:type_name -> proto.ConnectionEstablished
	3, // 2: proto.Frame.Data:type_name -> proto.Data
	2, // 3: proto.DialRequest.Source:type_name -> proto.NetAddr
	2, // 4: proto.DialRequest.Destination:type_name -> proto.NetAddr
	0, // 5: proto.ProxyService.DialNode:input_type -> proto.Frame
	0, // 6: proto.ProxyService.DialNode:output_type -> proto.Frame
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_teleport_lib_proxy_peer_v0_proxyservice_proto_init() }
func file_teleport_lib_proxy_peer_v0_proxyservice_proto_init() {
	if File_teleport_lib_proxy_peer_v0_proxyservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NetAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectionEstablished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes[0].OneofWrappers = []any{
		(*Frame_DialRequest)(nil),
		(*Frame_ConnectionEstablished)(nil),
		(*Frame_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_lib_proxy_peer_v0_proxyservice_proto_goTypes,
		DependencyIndexes: file_teleport_lib_proxy_peer_v0_proxyservice_proto_depIdxs,
		MessageInfos:      file_teleport_lib_proxy_peer_v0_proxyservice_proto_msgTypes,
	}.Build()
	File_teleport_lib_proxy_peer_v0_proxyservice_proto = out.File
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_rawDesc = nil
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_goTypes = nil
	file_teleport_lib_proxy_peer_v0_proxyservice_proto_depIdxs = nil
}
